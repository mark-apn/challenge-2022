version: '3'

services:

  web:
    container_name: puzzle_web
    build:
      context: ./
      dockerfile: ./build/Dockerfile.web
    ports:
      - "50002:80"

  # The nginx instance that routes external traffic to the gRPC application server workers
  # If 1 process crashes, the gRPC application server will be restarted and the other workers
  # will pick up the slack
  envoy:
    container_name: puzzle_proxy
    build:
      context: ./
      dockerfile: ./build/Dockerfile.envoy
    ports:
      - "50000:8080"

  # # Nginx load balancer for the 3 separate server containers
  # nginx:
  #   container_name: puzzle_load_balancer
  #   build:
  #     context: ./
  #     dockerfile: ./build/Dockerfile.nginx
  #   volumes:
  #     - ./data/nginx:/var/log/nginx

  # The background service that run scheduled tasks
  task_worker:
    container_name: puzzle_task_worker
    build:
      context: ./
      dockerfile: ./build/Dockerfile.worker
    restart: always

  # 3 separate (load balanced) services that handle gRPC requests
  server_worker1:
    container_name: puzzle_server_worker1
    build:
      context: ./
      dockerfile: ./build/Dockerfile.server
    restart: always

  # server_worker2:
  #   container_name: puzzle_server_worker2
  #   build:
  #     context: ./
  #     dockerfile: ./build/Dockerfile.server
  #   restart: always

  # server_worker3:
  #   container_name: puzzle_server_worker3
  #   build:
  #     context: ./
  #     dockerfile: ./build/Dockerfile.server
  #   restart: always

  # The database that saves the puzzles
  rethinkdb:
    container_name: puzzle_rethinkdb
    image: rethinkdb:2.4
    volumes:
      - ./data/db:/data
    ports:
      - "28015:28015"
      - "50001:8080"
